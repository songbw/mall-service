<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fengchao.equity.mapper.CardTicketMapperX">
    <resultMap id="BaseResultMap" type="com.fengchao.equity.model.CardTicket">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="card_id" jdbcType="INTEGER" property="cardId" />
        <result column="card" jdbcType="VARCHAR" property="card" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="open_id" jdbcType="VARCHAR" property="openId" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="activate_time" jdbcType="TIMESTAMP" property="activateTime" />
        <result column="consumed_time" jdbcType="TIMESTAMP" property="consumedTime" />
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
        <result column="status" jdbcType="SMALLINT" property="status" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="is_delete" jdbcType="SMALLINT" property="isDelete" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, card_id, card, password, open_id, create_time, update_time, activate_time, consumed_time,
    end_time, status, remark, is_delete
  </sql>
    <select id="selectByExample" parameterType="com.fengchao.equity.model.CardTicketExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from card_ticket
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from card_ticket
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from card_ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.fengchao.equity.model.CardTicketExample">
        delete from card_ticket
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fengchao.equity.model.CardTicket" useGeneratedKeys="true">
    insert into card_ticket (card_id, card, password,
      open_id, create_time, update_time,
      activate_time, consumed_time, end_time,
      status, remark, is_delete
      )
    values (#{cardId,jdbcType=INTEGER}, #{card,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{openId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{activateTime,jdbcType=TIMESTAMP}, #{consumedTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR}, #{isDelete,jdbcType=SMALLINT}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fengchao.equity.model.CardTicket" useGeneratedKeys="true">
        insert into card_ticket
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cardId != null">
                card_id,
            </if>
            <if test="card != null">
                card,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="activateTime != null">
                activate_time,
            </if>
            <if test="consumedTime != null">
                consumed_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cardId != null">
                #{cardId,jdbcType=INTEGER},
            </if>
            <if test="card != null">
                #{card,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activateTime != null">
                #{activateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumedTime != null">
                #{consumedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fengchao.equity.model.CardTicketExample" resultType="java.lang.Long">
        select count(*) from card_ticket
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update card_ticket
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.cardId != null">
                card_id = #{record.cardId,jdbcType=INTEGER},
            </if>
            <if test="record.card != null">
                card = #{record.card,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.openId != null">
                open_id = #{record.openId,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.activateTime != null">
                activate_time = #{record.activateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.consumedTime != null">
                consumed_time = #{record.consumedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=SMALLINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=SMALLINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update card_ticket
        set id = #{record.id,jdbcType=INTEGER},
        card_id = #{record.cardId,jdbcType=INTEGER},
        card = #{record.card,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        open_id = #{record.openId,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        activate_time = #{record.activateTime,jdbcType=TIMESTAMP},
        consumed_time = #{record.consumedTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=SMALLINT},
        remark = #{record.remark,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=SMALLINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fengchao.equity.model.CardTicket">
        update card_ticket
        <set>
            <if test="cardId != null">
                card_id = #{cardId,jdbcType=INTEGER},
            </if>
            <if test="card != null">
                card = #{card,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="activateTime != null">
                activate_time = #{activateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumedTime != null">
                consumed_time = #{consumedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=SMALLINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fengchao.equity.model.CardTicket">
    update card_ticket
    set card_id = #{cardId,jdbcType=INTEGER},
      card = #{card,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      activate_time = #{activateTime,jdbcType=TIMESTAMP},
      consumed_time = #{consumedTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <insert id="inserBatch" parameterType="java.util.List" >
    insert into card_ticket (card_id, card,
    password, remark) values
    <foreach collection="list" item="item" index="index" separator=",">
        (
        #{item.cardId,jdbcType=INTEGER},
        #{item.card,jdbcType=VARCHAR},
        #{item.password,jdbcType=VARCHAR},
        #{item.remark,jdbcType=VARCHAR}
        )
    </foreach>
    </insert>
    <insert id="activatesCardTicket" parameterType="java.util.List" >
        update card_ticket
        set status = 2,
            activate_time = current_timestamp
        where
        <foreach collection="list" item="item" open="( " separator=") or (" close=" )">
        id = #{item.id,jdbcType=INTEGER} and card = #{item.card,jdbcType=VARCHAR}
        </foreach>
    </insert>
</mapper>