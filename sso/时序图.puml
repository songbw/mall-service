@startuml
关爱通APP -> FC_WEB: 获取authcode
FC_WEB -> FC_业务端: 获取登录信息
FC_业务端 -> FC_关爱通_CLIENT: 发送authcode
FC_关爱通_CLIENT -> 关爱通服务端: 请求APP TOKEN
关爱通服务端 --> FC_关爱通_CLIENT: 返回APP TOKEN
FC_关爱通_CLIENT -> 关爱通服务端: 发送token和authcode,请求openId
关爱通服务端 --> FC_关爱通_CLIENT: 返回openId
FC_业务端 <-- FC_关爱通_CLIENT: 返回openId，
FC_业务端 <-- FC_业务端: 并持久化，生成FC_TOKEN
FC_WEB <-- FC_业务端: 返回FC_TOKEN,openId
@enduml

@startuml
FC_WEB -> FC_业务端: 获取员工信息
FC_业务端 -> FC_关爱通_CLIENT: 发送openId
FC_关爱通_CLIENT -> 关爱通服务端: 请求APP TOKEN
关爱通服务端 --> FC_关爱通_CLIENT: 返回APP TOKEN
FC_关爱通_CLIENT -> 关爱通服务端: 发送token和openId,请求员工信息
关爱通服务端 --> FC_关爱通_CLIENT: 返回员工信息
FC_业务端 <-- FC_关爱通_CLIENT: 返回员工信息，并持久化
FC_WEB <-- FC_业务端: 返回员工信息
@enduml

@startuml
FC_WEB -> FC_业务端: 发起预支付
FC_业务端 -> FC_关爱通_CLIENT: 请求APP TOKEN
FC_关爱通_CLIENT -> 关爱通服务端: 请求APP TOKEN
关爱通服务端 --> FC_关爱通_CLIENT: 返回APP TOKEN
FC_业务端 <-- FC_关爱通_CLIENT: 返回APP TOKEN
FC_业务端 <-- FC_业务端: 组织数据
FC_WEB <-- FC_业务端: 返回openId和notifyUrl和urlencoded
FC_WEB -> 关爱通服务端: 调起收银台
关爱通服务端 -> FC_业务端: 支付回调结果通知，实现业务逻辑
关爱通服务端 <-- FC_业务端: 支付结果返回success或false
FC_业务端 -> FC_WEB: 支付结果通知
@enduml

@startuml
FC_WEB管理端 -> FC_业务端: 发起退款
FC_业务端 -> FC_关爱通_CLIENT: 组织数据，发起退款
FC_关爱通_CLIENT -> 关爱通服务端: 请求APP TOKEN
关爱通服务端 --> FC_关爱通_CLIENT: 返回APP TOKEN
FC_关爱通_CLIENT -> 关爱通服务端: 申请退款
FC_WEB <-- FC_业务端: 返回ok
关爱通服务端 -> FC_业务端: 退款回调结果通知，实现业务逻辑
关爱通服务端 <-- FC_业务端: 支付结果返回success或false
FC_业务端 -> FC_WEB管理端: 退款结果通知
@enduml